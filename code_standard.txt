TEST MODELS

class Test[Model](TestCase):
    def test_create_delete(self):
        # create
         (...)

        # delete
         (...)
    
    def test_fields(self):
        (...)

    def test_related_name(self):
        # [m2m field 01]
         (...)

        # [m2m field 02]
         (...)

        # [m2m field 03]
         (...)

    def test_[field]_relation(self):
        # testing related name
         (...)
        
        # testing cascade
         (...)

    def test_[staticmethod]_staticmethod(self):
        (...)

    def test_str(self):
        (...)

    def test_[method]_method(self):
        (...)


--------------------------------------------------------

TEST VIEWS

class Test[View](TestCase):
    url = BASE_URL + '[view_url]'

    def test_req(self):
        response = client.[view_method](self.url)
        self.assertEqual(response.status_code, status.[expected_status_code])

        for method in [unallowed_methods]:
            response = getattr(client, method)(self.url)
            self.assertEqual(response.status_code, status.HTTP_405_METHOD_NOT_ALLOWED)

    def test_res(self):
        (...)
